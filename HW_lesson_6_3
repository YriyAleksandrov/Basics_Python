"""
Реализовать базовый класс Worker (работник), в котором определить атрибуты: name,
surname, position (должность), income (доход). Последний атрибут должен быть
защищенным и ссылаться на словарь, содержащий элементы: оклад и премия, например,
{"wage": wage, "bonus": bonus}. Создать класс Position (должность) на базе класса Worker.
В классе Position реализовать методы получения полного имени сотрудника (get_full_name) и
дохода с учетом премии (get_total_income). Проверить работу примера на реальных данных
(создать экземпляры класса Position, передать данные, проверить значения атрибутов,
вызвать методы экземпляров).
"""


class Worker:
    def __init__(self, name, surname, position, income):
        self.name = name
        self.surname = surname
        self.position = position
        self._income = income
        print(f'Проверка значений атрибутов: {self.name, self.surname, self.position, self._income}')


class Position(Worker):
    def get_full_name(self):
        print(f'Имя сотрудника: {self.surname} {self.name}')

    def get_total_income(self):
        print(f'Доход: {(self._income["wage"] + self._income["bonus"])} у.е.')


my_dict = {"wage": 70000, "bonus": 56000}
animal_dict = {"wage": 2500, "bonus": 1500}
aleksandrov_data = Position('Yriy', 'Aleksandrov', 'programmer', my_dict)
aleksandrov_data.get_full_name()
aleksandrov_data.get_total_income()

cot_data = Position('Tom', 'Cat', 'animal', animal_dict)
cot_data.get_full_name()
cot_data.get_total_income()
