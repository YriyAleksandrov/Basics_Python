"""
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод
__init__()), который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде
прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

31 22           3 5 32          3 5 8 3
37 43           2 4 6           8 3 7 1
51 86           -1 64 -8

Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в
привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух
объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой
строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
"""


class Matrix:
    def __init__(self, matrix1, matrix2, matrix3):
        self.m1 = matrix1
        self.m2 = matrix2
        self.m3 = matrix3

    def __str__(self):
        return f'Вывод в привычном виде:\n{self.m1}\n{self.m2}\n\n{self.m3}\n'

    def __add__(self, other):
        return self.m1[0][0] + other.m1[0][0], self.m1[0][1] + other.m1[0][1], self.m1[0][2] + other.m1[0][2], \
               self.m1[1][0] + other.m1[1][0], self.m1[1][1] + other.m1[1][1], self.m1[1][2] + other.m1[1][2], \
               self.m1[2][0] + other.m1[2][0], self.m1[2][1] + other.m1[2][1], self.m1[2][2] + other.m1[2][2]


matrix_1 = [[31, 22, 2], [37, 43, -4], [51, 86, 23]]
matrix_2 = [[3, 5, 32], [2, 4, 6], [-1, 64, -8]]
matrix_3 = [[1, 6, 8, 3], [9, 4, 7, 1]]
my_matrix_1 = Matrix(matrix_1, matrix_2, matrix_3)
print(my_matrix_1.m1)
print(my_matrix_1.m2)
print(my_matrix_1.m3)
print(my_matrix_1)
my_matrix_2 = Matrix(matrix_2, matrix_1, matrix_3)
print(f'[          ][         ][           ]')  # это просто так)
print(my_matrix_1 + my_matrix_2)
